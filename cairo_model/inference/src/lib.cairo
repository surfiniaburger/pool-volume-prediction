use orion::operators::tensor::{Tensor, TensorTrait};
use orion::operators::tensor::{U32Tensor, I32Tensor, I8Tensor, FP8x23Tensor, FP16x16Tensor, FP32x32Tensor, BoolTensor};
use orion::numbers::{FP8x23, FP16x16, FP32x32};
use orion::operators::matrix::{MutMatrix, MutMatrixImpl};

use node_pad_const_82::get_node_pad_const_82;
use node_pad_const_65::get_node_pad_const_65;
use node_pad_const_48::get_node_pad_const_48;
use node_pad_const_31::get_node_pad_const_31;
use node_pad_const_14::get_node_pad_const_14;
use node_new_shape_119::get_node_new_shape_119;
use node_model_conv1d_9_conv1d_expanddims_1_0::get_node_model_conv1d_9_conv1d_expanddims_1_0;
use node_model_conv1d_8_conv1d_expanddims_1_0::get_node_model_conv1d_8_conv1d_expanddims_1_0;
use node_model_conv1d_7_conv1d_expanddims_1_0::get_node_model_conv1d_7_conv1d_expanddims_1_0;
use node_model_conv1d_6_conv1d_expanddims_1_0::get_node_model_conv1d_6_conv1d_expanddims_1_0;
use node_model_conv1d_5_conv1d_expanddims_1_0::get_node_model_conv1d_5_conv1d_expanddims_1_0;
use node_model_conv1d_4_conv1d_expanddims_1_0::get_node_model_conv1d_4_conv1d_expanddims_1_0;
use node_model_conv1d_3_conv1d_expanddims_1_0::get_node_model_conv1d_3_conv1d_expanddims_1_0;
use node_model_conv1d_2_conv1d_expanddims_1_0::get_node_model_conv1d_2_conv1d_expanddims_1_0;
use node_model_conv1d_11_conv1d_expanddims_1_0::get_node_model_conv1d_11_conv1d_expanddims_1_0;
use node_model_conv1d_10_conv1d_expanddims_1_0::get_node_model_conv1d_10_conv1d_expanddims_1_0;
use node_model_conv1d_1_conv1d_expanddims_1_0::get_node_model_conv1d_1_conv1d_expanddims_1_0;
use node_model_conv1d_conv1d_expanddims_1_0::get_node_model_conv1d_conv1d_expanddims_1_0;
use node_const_fold_opt_139_148::get_node_const_fold_opt_139_148;
use node_const_fold_opt_139::get_node_const_fold_opt_139;

use model_conv1d_conv1d_9_perm::get_model_conv1d_conv1d_9_perm;
use model_conv1d_conv1d_dilations::get_model_conv1d_conv1d_dilations;
use model_conv1d_conv1d_strides::get_model_conv1d_conv1d_strides;
use model_conv1d_conv1d_kernel_shape::get_model_conv1d_conv1d_kernel_shape;
use model_conv1d_conv1d_11_perm::get_model_conv1d_conv1d_11_perm;
use model_conv1d_1_conv1d_18_perm::get_model_conv1d_1_conv1d_18_perm;
use model_conv1d_1_conv1d_dilations::get_model_conv1d_1_conv1d_dilations;
use model_conv1d_1_conv1d_strides::get_model_conv1d_1_conv1d_strides;
use model_conv1d_1_conv1d_kernel_shape::get_model_conv1d_1_conv1d_kernel_shape;
use model_conv1d_2_conv1d_dilations::get_model_conv1d_2_conv1d_dilations;
use model_conv1d_2_conv1d_strides::get_model_conv1d_2_conv1d_strides;
use model_conv1d_2_conv1d_kernel_shape::get_model_conv1d_2_conv1d_kernel_shape;
use model_conv1d_2_conv1d_28_perm::get_model_conv1d_2_conv1d_28_perm;
use model_conv1d_3_conv1d_35_perm::get_model_conv1d_3_conv1d_35_perm;
use model_conv1d_3_conv1d_dilations::get_model_conv1d_3_conv1d_dilations;
use model_conv1d_3_conv1d_strides::get_model_conv1d_3_conv1d_strides;
use model_conv1d_3_conv1d_kernel_shape::get_model_conv1d_3_conv1d_kernel_shape;
use model_conv1d_3_conv1d_pads::get_model_conv1d_3_conv1d_pads;
use model_conv1d_4_conv1d_dilations::get_model_conv1d_4_conv1d_dilations;
use model_conv1d_4_conv1d_strides::get_model_conv1d_4_conv1d_strides;
use model_conv1d_4_conv1d_kernel_shape::get_model_conv1d_4_conv1d_kernel_shape;
use model_conv1d_4_conv1d_45_perm::get_model_conv1d_4_conv1d_45_perm;
use model_conv1d_5_conv1d_52_perm::get_model_conv1d_5_conv1d_52_perm;
use model_conv1d_5_conv1d_dilations::get_model_conv1d_5_conv1d_dilations;
use model_conv1d_5_conv1d_strides::get_model_conv1d_5_conv1d_strides;
use model_conv1d_5_conv1d_kernel_shape::get_model_conv1d_5_conv1d_kernel_shape;
use model_conv1d_5_conv1d_pads::get_model_conv1d_5_conv1d_pads;
use model_conv1d_6_conv1d_dilations::get_model_conv1d_6_conv1d_dilations;
use model_conv1d_6_conv1d_strides::get_model_conv1d_6_conv1d_strides;
use model_conv1d_6_conv1d_kernel_shape::get_model_conv1d_6_conv1d_kernel_shape;
use model_conv1d_6_conv1d_62_perm::get_model_conv1d_6_conv1d_62_perm;
use model_conv1d_7_conv1d_69_perm::get_model_conv1d_7_conv1d_69_perm;
use model_conv1d_7_conv1d_dilations::get_model_conv1d_7_conv1d_dilations;
use model_conv1d_7_conv1d_strides::get_model_conv1d_7_conv1d_strides;
use model_conv1d_7_conv1d_kernel_shape::get_model_conv1d_7_conv1d_kernel_shape;
use model_conv1d_7_conv1d_pads::get_model_conv1d_7_conv1d_pads;
use model_conv1d_8_conv1d_dilations::get_model_conv1d_8_conv1d_dilations;
use model_conv1d_8_conv1d_strides::get_model_conv1d_8_conv1d_strides;
use model_conv1d_8_conv1d_kernel_shape::get_model_conv1d_8_conv1d_kernel_shape;
use model_conv1d_8_conv1d_79_perm::get_model_conv1d_8_conv1d_79_perm;
use model_conv1d_9_conv1d_86_perm::get_model_conv1d_9_conv1d_86_perm;
use model_conv1d_9_conv1d_dilations::get_model_conv1d_9_conv1d_dilations;
use model_conv1d_9_conv1d_strides::get_model_conv1d_9_conv1d_strides;
use model_conv1d_9_conv1d_kernel_shape::get_model_conv1d_9_conv1d_kernel_shape;
use model_conv1d_9_conv1d_pads::get_model_conv1d_9_conv1d_pads;
use model_conv1d_10_conv1d_dilations::get_model_conv1d_10_conv1d_dilations;
use model_conv1d_10_conv1d_strides::get_model_conv1d_10_conv1d_strides;
use model_conv1d_10_conv1d_kernel_shape::get_model_conv1d_10_conv1d_kernel_shape;
use model_conv1d_10_conv1d_96_perm::get_model_conv1d_10_conv1d_96_perm;
use model_conv1d_11_conv1d_102_perm::get_model_conv1d_11_conv1d_102_perm;
use model_conv1d_11_conv1d_dilations::get_model_conv1d_11_conv1d_dilations;
use model_conv1d_11_conv1d_strides::get_model_conv1d_11_conv1d_strides;
use model_conv1d_11_conv1d_kernel_shape::get_model_conv1d_11_conv1d_kernel_shape;

fn main(node_input_1: Tensor<FP16x16>) -> Tensor<FP16x16> {
let node_model_conv1d_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_input_1, get_node_const_fold_opt_139().data);
let node_model_conv1d_conv1d_9_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_conv1d_11_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_1_pad_0 = // Operator Pad is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_1_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_conv1d_1_pad_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_1_conv1d_18_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_1_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_1_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_1_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_activation_relu_0 = NNTrait::relu(@node_model_conv1d_1_conv1d_squeeze_0);
let node_model_conv1d_2_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_activation_relu_0, get_get_node_const_fold_opt_139()_148().data);
let node_model_conv1d_2_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_2_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_2_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_2_conv1d_28_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_add_add_0 = TensorTrait::add(node_model_conv1d_conv1d_11_0, node_model_conv1d_2_conv1d_28_0);
let node_model_conv1d_3_pad_0 = // Operator Pad is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_3_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_conv1d_3_pad_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_3_conv1d_35_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_3_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_3_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_3_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_activation_1_relu_0 = NNTrait::relu(@node_model_conv1d_3_conv1d_squeeze_0);
let node_model_conv1d_4_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_activation_1_relu_0, get_get_node_const_fold_opt_139()_148().data);
let node_model_conv1d_4_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_4_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_4_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_4_conv1d_45_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_add_1_add_0 = TensorTrait::add(node_model_add_add_0, node_model_conv1d_4_conv1d_45_0);
let node_model_conv1d_5_pad_0 = // Operator Pad is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_5_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_conv1d_5_pad_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_5_conv1d_52_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_5_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_5_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_5_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_activation_2_relu_0 = NNTrait::relu(@node_model_conv1d_5_conv1d_squeeze_0);
let node_model_conv1d_6_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_activation_2_relu_0, get_get_node_const_fold_opt_139()_148().data);
let node_model_conv1d_6_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_6_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_6_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_6_conv1d_62_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_add_2_add_0 = TensorTrait::add(node_model_add_1_add_0, node_model_conv1d_6_conv1d_62_0);
let node_model_conv1d_7_pad_0 = // Operator Pad is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_7_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_conv1d_7_pad_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_7_conv1d_69_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_7_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_7_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_7_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_activation_3_relu_0 = NNTrait::relu(@node_model_conv1d_7_conv1d_squeeze_0);
let node_model_conv1d_8_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_activation_3_relu_0, get_get_node_const_fold_opt_139()_148().data);
let node_model_conv1d_8_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_8_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_8_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_8_conv1d_79_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_add_3_add_0 = TensorTrait::add(node_model_add_2_add_0, node_model_conv1d_8_conv1d_79_0);
let node_model_conv1d_9_pad_0 = // Operator Pad is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_9_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_conv1d_9_pad_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_9_conv1d_86_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_9_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_9_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_9_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_activation_4_relu_0 = NNTrait::relu(@node_model_conv1d_9_conv1d_squeeze_0);
let node_model_conv1d_10_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_activation_4_relu_0, get_get_node_const_fold_opt_139()_148().data);
let node_model_conv1d_10_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_10_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_10_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_10_conv1d_96_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_add_4_add_0 = TensorTrait::add(node_model_add_3_add_0, node_model_conv1d_10_conv1d_96_0);
let node_model_conv1d_11_conv1d_expanddims_0 = TensorTrait::unsqueeze(@node_model_add_4_add_0, get_node_const_fold_opt_139().data);
let node_model_conv1d_11_conv1d_102_0 = // Operator Transpose is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_11_conv1d_0 = // Operator Conv is not yet supported by the Giza transpiler. If Orion supports it, consider manual implementation.;
let node_model_conv1d_11_conv1d_squeeze_0 = TensorTrait::squeeze(@node_model_conv1d_11_conv1d_0, Option::Some(get_get_node_const_fold_opt_139()_148().data));
let node_model_conv1d_11_softmax_0 = NNTrait::softmax(@node_model_conv1d_11_conv1d_squeeze_0, 1);
let node_conv1d_11 = TensorTrait::reshape(@node_model_conv1d_11_softmax_0, get_node_new_shape_119().data);

        node_conv1d_11
    }